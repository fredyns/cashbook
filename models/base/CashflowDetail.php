<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "cashflowDetail".
 *
 * @property integer $id
 * @property integer $cashflow_id
 * @property string $flow
 * @property double $nominal
 * @property integer $budgetItem_id
 * @property string $notes
 * @property integer $monthlyBudgetItem_id
 *
 * @property \app\models\Cashflow $cashflow
 * @property \app\models\BudgetItem $budgetItem
 * @property \app\models\MonthlyBudgetItem $monthlyBudgetItem
 * @property string $aliasModel
 */
abstract class CashflowDetail extends \yii\db\ActiveRecord
{
    
    /**
     * ENUM field values
     */
    const FLOW_DEBIT = 'debit';
    const FLOW_CREDIT = 'credit';

    var $enum_labels = false;
    
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'cashflowDetail';
    }
    
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['cashflow_id', 'flow', 'nominal', 'budgetItem_id'], 'required'],
            [['cashflow_id', 'budgetItem_id', 'monthlyBudgetItem_id'], 'integer'],
            [['flow', 'notes'], 'string'],
            [['nominal'], 'number'],
            [['cashflow_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Cashflow::className(), 'targetAttribute' => ['cashflow_id' => 'id']],
            [['budgetItem_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\BudgetItem::className(), 'targetAttribute' => ['budgetItem_id' => 'id']],
            [['monthlyBudgetItem_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\MonthlyBudgetItem::className(), 'targetAttribute' => ['monthlyBudgetItem_id' => 'id']],
            ['flow', 'in', 'range' => [
                    self::FLOW_DEBIT,
                    self::FLOW_CREDIT,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'cashflow_id' => 'Cashflow',
            'flow' => 'Flow',
            'nominal' => 'Nominal',
            'budgetItem_id' => 'Budget Item',
            'notes' => 'Notes',
            'monthlyBudgetItem_id' => 'Monthly Budget Item',
        ];
    }
        
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCashflow()
    {
        return $this->hasOne(\app\models\Cashflow::className(), ['id' => 'cashflow_id']);
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBudgetItem()
    {
        return $this->hasOne(\app\models\BudgetItem::className(), ['id' => 'budgetItem_id']);
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMonthlyBudgetItem()
    {
        return $this->hasOne(\app\models\MonthlyBudgetItem::className(), ['id' => 'monthlyBudgetItem_id']);
    }
                
    /**
     * get column flow enum value label
     * @param string $value
     * @return string
     */
    public static function getFlowValueLabel($value)
    {
        $labels = self::optsFlow();

        if(isset($labels[$value])) {
            return $labels[$value];
        }

        return $value;
    }

    /**
     * column flow ENUM value labels
     * @return array
     */
    public static function optsFlow()
    {
        return [
            self::FLOW_DEBIT => self::FLOW_DEBIT,
            self::FLOW_CREDIT => self::FLOW_CREDIT,
        ];
    }
    
}
